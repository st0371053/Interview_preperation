/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void getInorderTraversal(TreeNode* root, int &k, int &answer) {

    if(root == NULL)
        return;
    getInorderTraversal(root->left,k,answer);
    k--;
    if(k == 0) { 
        answer = root->val;
        return;
    }
    getInorderTraversal(root->right,k,answer);
    return;
}
int kthSmallest(TreeNode* root, int k) {
    int answer = 0;
    getInorderTraversal(root,k,answer);
    return answer;
}
};