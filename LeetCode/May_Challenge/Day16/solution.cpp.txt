/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {

        if(head == NULL || head->next == NULL) {
            return head;
        }
        ListNode* evenHead = head->next, *oddHead = head;
        ListNode* even = evenHead, *odd = oddHead;
        head = head->next->next;
        while(head != NULL) {
            odd->next = head;
            head = head->next;
            odd = odd->next;
            even->next= head;
            if(head != NULL) {
                even = even->next;
                head = head->next;
            }
        }
        if(even != NULL)
            even->next = NULL;
        odd->next = evenHead;
        return oddHead;
    }
};